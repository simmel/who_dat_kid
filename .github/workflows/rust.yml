name: Rust

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Cache cargo registry
      uses: actions/cache@v1
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
    - name: Cache cargo index
      uses: actions/cache@v1
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
    - name: Cache cargo build
      uses: actions/cache@v1
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
    - name: clippy
      run: cargo clippy --verbose
    - name: Run tests
      run: cargo test --verbose
  build_and_publish:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push'
    steps:
    - uses: actions/checkout@v2
    - name: Build container
      run: docker build --tag who_dat_kid:$GITHUB_SHA .
    - name: Log into registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
    - name: Push image
      run: |
        IMAGE_NAME=${GITHUB_REPOSITORY##*/}
        IMAGE_ID=darksoy/$IMAGE_NAME

        # Change all uppercase to lowercase
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        # Strip git ref prefix from version
        VERSION=${GITHUB_REF##*/}
        # Use Docker `latest` tag convention
        [ "$VERSION" == "master" ] && VERSION=latest
        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION
        echo IMAGE_ID=$IMAGE_ID
        docker tag who_dat_kid:$GITHUB_SHA $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION
